refresh_rate: 30 seconds
appenders:
  stdout:
    kind: console
    encoder:
      pattern: "[{d(%Y-%m-%d %H:%M:%S)}] {h({l})} [{L}] {m}{n}" 
  requests:
    kind: rolling_file
    path: "log/net.log"
    encoder:
      pattern: "[{d(%Y-%m-%d %H:%M:%S)}] [{L}] {m}{n}" 
    # The policy which handles rotation of the log file. Required.
    policy:
      # Identifies which policy is to be used. If no kind is specified, it will
      # default to "compound".
      kind: compound

      # The remainder of the configuration is passed along to the policy's
      # deserializer, and will vary based on the kind of policy.
      trigger:
        kind: size
        limit: 10 Mb

      #roller:
      #  kind: delete
      roller:
        kind: fixed_window

        # The filename pattern for archived logs. This is either an absolute path or if lacking a leading `/`,
        # relative to the `cwd` of your application. The pattern must contain at least one
        # instance of `{}`, all of which will be replaced with an archived log file's index.
        # If the file extension of the pattern is `.gz` and the `gzip` Cargo feature
        # is enabled, the archive files will be gzip-compressed.
        # Required.
        pattern: log/net.{}.log

        # The maximum number of archived logs to maintain. Required.
        count: 5

        # The base value for archived log indices. Defaults to 0.
        base: 1
root:
  level: info
  appenders:
    - stdout
    - requests
#loggers:
  #app::backend::db:
  #  level: info
 # app::requests:
  #  level: info
   # appenders:
    #  - requests
    #additive: true